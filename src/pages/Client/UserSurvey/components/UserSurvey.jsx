import { useEffect, useState } from 'react'
import { Button, Card } from 'antd'
import styles from '../scss/UserSurvey.module.scss'
import { useNavigate } from 'react-router-dom'
import { useDispatch, useSelector } from 'react-redux'
import { getAllCategory } from 'features/client/category/categoryThunks'
import { CheckCircle } from 'lucide-react' // Assuming you're using lucide-react

export default function SurveyForm() {
  const [selectedTags, setSelectedTags] = useState([])
  const navigate = useNavigate()
  const dispatch = useDispatch()
  const { categories: cate } = useSelector(state => state.category)

  useEffect(() => {
    if (cate.length === 0) {
      dispatch(getAllCategory())
    }
  }, [dispatch, cate.length])

  // Use categories directly without assigning random colors
  const categories = cate.map(itemCate => ({
    category_id: itemCate._id,
    name: itemCate.name
  }))

  const getCategoryIcon = categoryName => {
    const iconMap = {
      'B·∫•t ƒë·ªông s·∫£n': 'üè†',
      'Xe c·ªô': 'üõµ',
      'ƒê·ªì ƒëi·ªán t·ª≠': 'üì±',
      'ƒê·ªì gia d·ª•ng, n·ªôi th·∫•t, c√¢y c·∫£nh': 'üñº',
      'T·ªß l·∫°nh, m√°y gi·∫∑t, ƒëi·ªÅu h√≤a': 'üõÅ',
      'M·∫π v√† b√©': 'üë∂',
      'Th·ªùi trang': 'üëó',
      'Th√∫ c∆∞ng': 'üê∂',
      'ƒê·ªì ƒÉn, th·ª±c ph·∫©m': 'üçï',
      'Gi·∫£i tr√≠, th·ªÉ thao': 'ü§æ',
      'T·∫•t c·∫£': '‚úîÔ∏è'
    }

    return iconMap[categoryName] || 'üì¶'
  }

  const handleTagSelect = cate => {
    const isSelected = selectedTags.some(tag => tag.category_id === cate.category_id)

    if (isSelected) {
      setSelectedTags(selectedTags.filter(tag => tag.category_id !== cate.category_id))
    } else {
      setSelectedTags([...selectedTags, cate])
    }
  }

  return (
    <div className={styles.survey}>
      <div className={styles.survey__container}>
        {/* Left Column - Survey Info */}
        <div className={styles.survey__info}>
          <h1 className={styles['survey__info-title']}>Kh√°m ph√° s·ªü th√≠ch c·ªßa b·∫°n</h1>
          <p className={styles['survey__info-subtitle']}>T√¨m ki·∫øm s·∫£n ph·∫©m ph√π h·ª£p d·ª±a tr√™n s·ªü th√≠ch c√° nh√¢n</p>
          <div className={styles['survey__info-description']}>
            <p>
              Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi kh·∫£o s√°t ng∆∞·ªùi d√πng c·ªßa ch√∫ng t√¥i. B·∫±ng c√°ch chia s·∫ª s·ªü th√≠ch c·ªßa b·∫°n, ch√∫ng t√¥i c√≥
              th·ªÉ gi√∫p b·∫°n k·∫øt n·ªëi v·ªõi nh·ªØng ng∆∞·ªùi c√≥ c√πng m·ªëi quan t√¢m v√† t√¨m ki·∫øm s·∫£n ph·∫©m ph√π h·ª£p nh·∫•t v·ªõi nhu c·∫ßu
              c·ªßa b·∫°n.
            </p>
            <p>H√£y ch·ªçn nh·ªØng danh m·ª•c b·∫°n quan t√¢m nh·∫•t ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh kh√°m ph√°!</p>
          </div>
          {/* Placeholder for an illustration or image */}
          <div className={styles['survey__info-image-container']}>{/* You could add an image here */}</div>
        </div>

        {/* Right Column - Survey Form */}
        <Card className={styles.survey__card}>
          {/* <div className={styles.survey__header}>
            <div className={styles['survey__header-content']}>
              <h2 className={styles.survey__title}>Kh·∫£o s√°t ng∆∞·ªùi d√πng</h2>
              <p className={styles.survey__subtitle}>
                H√£y chia s·∫ª th√¥ng tin ƒë·ªÉ ch√∫ng t√¥i c√≥ th·ªÉ t√¨m ki·∫øm ng∆∞·ªùi c√πng s·ªü th√≠ch v·ªõi b·∫°n
              </p>
            </div>
          </div> */}

          <div className={styles['survey__step-content']}>
            <div className={styles.survey__field}>
              <label className={styles.survey__label}>
                B·∫°n quan t√¢m ƒë·∫øn lo·∫°i ƒë·ªì n√†o?
                <span className={styles['survey__label-hint']}>Ch·ªçn m·ªôt ho·∫∑c nhi·ªÅu danh m·ª•c</span>
              </label>
              <div className={styles.survey__categories}>
                {categories.map(category => (
                  <div
                    key={category.category_id || category.name}
                    className={`${styles.survey__category} ${
                      selectedTags.some(tag => tag.category_id === category.category_id)
                        ? styles['survey__category--selected']
                        : ''
                    }`}
                    onClick={() => handleTagSelect(category)}
                  >
                    <span className={styles['survey__category-icon']}>{getCategoryIcon(category.name)}</span>
                    <span className={styles['survey__category-name']}>{category.name}</span>
                    <CheckCircle size={14} className={styles['survey__category-check']} />
                  </div>
                ))}
              </div>
            </div>
          </div>

          <div className={styles.survey__actions}>
            <Button
              className={`${styles.survey__button} ${styles['survey__button--back']}`}
              onClick={() => navigate('/')}
              danger={true}
            >
              B·ªè qua
            </Button>
            <Button
              type="primary"
              className={`${styles.survey__button} ${styles['survey__button--next']}`}
              onClick={() => {
                navigate('/')
              }}
              disabled={selectedTags.length === 0}
            >
              Ho√†n th√†nh
            </Button>
          </div>
        </Card>
      </div>
    </div>
  )
}
